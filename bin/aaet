#!/usr/bin/env ruby
require_relative File.read("#{File.dirname(__FILE__)}/../run.rb")
require 'commander/import'
require 'colorize'

program :version, '0.1.0'
program :description, 'Appium Automated Exploratory Tester'

command :crawler do |c|
  c.syntax = 'aaet  [options]'
  c.summary = 'Run Aaet Crawler'
  c.description = c.summary
  c.example 'description', ""
  c.option '-s', '--seconds SECONDS', Integer, 'Set Runtime in Seconds: e.g. -s 300 (for 5 minutes)'
  c.option '-c', '--config CONFIG', String, 'Set config file location: e.g. -c config.txt'
  c.option '-e', '--emulator EMULATOR', Array, 'Set emulator or emulators to start: e.g. -e "Nexus" or Array as -e "NexusOne emulator1 emulator2"'
  c.option '-o', '--orientation ORIENTATION', String, 'Set devices orientation: e.g. -o landscape'
  c.option '--bothOrientations', "If running in parallel with multiple devices. Tell Crawler to run both Orientations, if available. e.g --bothOrientations true"
  c.option '-l', '--language LANGUAGE', Array, 'Set languages(s): e.g. -l "en" or "en de ar" Default: en'
  c.option '-u', '--uuid UUID', Array, 'Set Real Device UUID. e.g. --uuid IBZ5AQMBCY7DHASK or Array as -u "UUID1 UUID2"'
  c.option '-t', '--translate', 'Translate strings after job finish: e.g. -t true'
  c.option '-a', '--applitools', 'Run Applitools Tests. e.g -a true'
  c.option '-b', '--baseline', 'Set new Applitools baseline images. e.g. -b true'
  c.option '-d', '--debug', 'Print debug statements: e.g. -d true'
  c.option '--resetAppium', 'Reset Appium Session. e.g. -r false'
  c.option '-x', '--cloud', 'Crawl in cloud. e.g. --cloud true. Make sure your cloud settings are set in [cloud] and caps is pointed to a config/toml file'
  c.action do |args, options|
    options.default \
    mode: "crawler",
    language: ["en"],
    orientation: "PORTRAIT",
    bothOrientations: false,
    translate: false,
    debug: false,
    applitools: false,
    baseline: false,
    resetAppium: false,
    cloud: false,
    emulator: nil,
    uuid: nil
    
    if options.config.nil?
      puts "\nYou must supply a config TOML file... e.g. -c configs/app-debug.txt\n".red
      abort
    end

    if options.emulator.nil? and options.uuid.nil?
      puts "\nYou must supply a emulator/simulator or UUID... e.g. -e Nexus10 or -u UUID\n".red
      abort
    end

    if options.cloud
      options.uuid = nil
      options.emulator = nil
    end

    options.orientation = options.orientation.upcase
    crawler(options.default)
  end
end

command :monkey do |c|
  c.syntax = 'aaet  [options]'
  c.summary = 'Run Aaet Monkey'
  c.description = c.summary
  c.example 'description', ""
  c.option '-s', '--seconds SECONDS', Integer, 'Set Runtime in Seconds: e.g. -s 300 (for 5 minutes)'
  c.option '-c', '--config CONFIG', String, 'Set config file location: e.g. -c app-debug.txt'
  c.option '-e', '--emulator EMULATOR', Array, 'Set emulator or emulators to start: e.g. -e "Nexus" or Array as -e "NexusOne emulator1 emulator2"'
  c.option '-u', '--uuid UUID', Array, 'Set Device UUID. e.g. --uuid IBZ5AQMBCY7DHASK or Array as -u "IBZ5AQMBCY7DHASK skso9eosdlldfjs'
  c.option '-o', '--orientation ORIENTATION', String, 'Set devices orientation: e.g. -o landscape'
  c.option '--bothOrientations', "If running in parallel with multiple devices. Tell Crawler to run both Orientations, if available. e.g --bothOrientations true"
  c.option '-l', '--language LANGUAGE', String, 'Set languages: e.g. -l "en"'
  c.option '-d', '--debug', 'Print debug statements: e.g. -d true'
  c.option '--resetAppium', 'Reset Appium Session. e.g. -r false'
  c.option '-x', '--cloud', 'Crawl in cloud. e.g. --cloud true. Make sure your cloud settings are set in [cloud] and caps is pointed to a config/toml file'
  c.action do |args, options|
    options.default \
    mode: "monkey",
    applitools: false,
    translate: false,
    seconds: 300,
    debug: false,
    language: "en",
    orientation: "PORTRAIT",
    bothOrientations: false,
    resetAppium: false,
    cloud: false,
    emulator: nil,
    uuid: nil

    if options.config.nil?
      puts "\nYou must supply a config TOML file... e.g. -c configs/app-debug.txt\n".red
      abort
    end

    if options.cloud
      options.uuid = nil
      options.emulator = nil
    end

    options.orientation = options.orientation.upcase
    monkey(options.default)
  end
end

command :replay do |c|
  c.syntax = 'aaet [options]'
  c.summary = 'Replay Last Aaet Run'
  c.description = c.summary
  c.example 'description', ""
  c.option '-s', '--seconds SECONDS', Integer, 'Set Runtime in Seconds: e.g. -s 300 (for 5 minutes)'
  c.option '-c', '--config CONFIG', String, 'Set config file location: e.g. -c config.txt'
  c.option '-t', '--translate', 'Translate strings after job finish: e.g. -t true'
  c.option '-a', '--applitools', 'Run Applitools Tests. e.g -a true'
  c.option '-b', '--baseline', 'Set new Applitools baseline images. e.g. -b true'
  c.option '-d', '--debug', 'Print debug statements: e.g. -d true'
  c.action do |args, options|
    options.default \
    mode: "replay",
    translate: false,
    debug: false,
    applitools: false,
    baseline: false

    replay(options.default)
  end
end